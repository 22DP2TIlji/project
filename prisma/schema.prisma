generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("https://vlcxbtdxhesdselqxyqv.supabase.co")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(50)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(255)
  role      Role     @default(user)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  reviews              Review[]
  routes               Route[]
  likedDestinations    UserLikedDestination[]

  @@map("users")
}

model Destination {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  latitude    Decimal? @db.Decimal(10, 8)
  longitude   Decimal? @db.Decimal(11, 8)
  country     String?  @db.VarChar(50)
  city        String?  @db.VarChar(50)
  description String   @db.Text
  category    String?  @db.VarChar(50)
  region      String?  @db.VarChar(50)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  likedByUsers UserLikedDestination[]
  weatherData  WeatherData[]

  @@map("destinations")
}

model Accommodation {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(100)
  description  String?  @db.Text
  address      String   @db.VarChar(255)
  latitude     Decimal  @db.Decimal(10, 8)
  longitude    Decimal  @db.Decimal(11, 8)
  category     String   @db.VarChar(50)
  priceRange   String?  @db.VarChar(50) @map("price_range")
  contactInfo  String?  @db.Text @map("contact_info")
  images       String?  @db.Text
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("accommodations")
}

model Event {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  description String?  @db.Text
  venue       String   @db.VarChar(255)
  latitude    Decimal  @db.Decimal(10, 8)
  longitude   Decimal  @db.Decimal(11, 8)
  startDate   DateTime @map("start_date")
  endDate     DateTime @map("end_date")
  price       Decimal? @db.Decimal(10, 2)
  category    String   @db.VarChar(50)
  images      String?  @db.Text
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("events")
}

model Review {
  id         Int           @id @default(autoincrement())
  userId     Int          @map("user_id")
  objectId   Int          @map("object_id")
  objectType ObjectType
  rating     Int
  comment    String?      @db.Text
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")

  user       User         @relation(fields: [userId], references: [id])

  @@map("reviews")
}

model Route {
  id          Int           @id @default(autoincrement())
  userId      Int          @map("user_id")
  name        String       @db.VarChar(100)
  description String?      @db.Text
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")

  user        User         @relation(fields: [userId], references: [id])
  points      RoutePoint[]

  @@map("routes")
}

model RoutePoint {
  id         Int           @id @default(autoincrement())
  routeId    Int          @map("route_id")
  objectId   Int          @map("object_id")
  objectType ObjectType
  sequence   Int
  createdAt  DateTime     @default(now()) @map("created_at")

  route      Route        @relation(fields: [routeId], references: [id])

  @@map("route_points")
}

model TouristAttraction {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(100)
  description   String?  @db.Text
  address       String   @db.VarChar(255)
  latitude      Decimal  @db.Decimal(10, 8)
  longitude     Decimal  @db.Decimal(11, 8)
  category      String   @db.VarChar(50)
  workingHours  String?  @db.Text @map("working_hours")
  contactInfo   String?  @db.Text @map("contact_info")
  images        String?  @db.Text
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@map("tourist_attractions")
}

model UserLikedDestination {
  userId        Int
  destinationId Int

  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  destination   Destination @relation(fields: [destinationId], references: [id], onDelete: Cascade)

  @@id([userId, destinationId])
  @@map("user_liked_destinations")
}

model WeatherData {
  id            Int      @id @default(autoincrement())
  locationId    Int      @map("location_id")
  timestamp     DateTime @default(now()) @updatedAt
  temperature   Decimal  @db.Decimal(5, 2)
  humidity      Decimal? @db.Decimal(5, 2)
  windSpeed     Decimal? @db.Decimal(5, 2) @map("wind_speed")
  windDirection Int?     @map("wind_direction")
  pressure      Decimal? @db.Decimal(6, 2)
  precipitation Decimal? @db.Decimal(5, 2)
  createdAt     DateTime @default(now()) @map("created_at")

  location      Destination @relation(fields: [locationId], references: [id])

  @@map("weather_data")
}

enum Role {
  user
  admin
}

enum ObjectType {
  attraction
  event
  accommodation
} 